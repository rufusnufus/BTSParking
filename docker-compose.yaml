version: "3"

x-logging:
  &default-logging
  options:
    tag: "{{ .ImageName }}|{{ .Name }}"
    max-size: '200m'
    max-file: '3'
  driver: json-file

x-resources:
  &default-resources
  cpus: 0.3
  mem_limit: 500M

x-custom:
  &default-set
  logging: *default-logging
  networks:
    - parking
  <<: *default-resources

services:
  db:
    image: postgres:14.0-alpine3.14
    container_name: db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    <<: *default-set

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.1
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    <<: *default-set

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    environment:
      - "HOST=http://localhost:80"
      - "DD_AGENT_HOST=datadog-agent"
      - "DD_LOGS_INJECTION=true"
      - "DD_SERVICE=backend"
    volumes:
      - ./backend:/home/app/app/
    ports:
      - "8000:8000"
    depends_on:
      - db
    <<: *default-set

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        CLIENT_BACKEND_PREFIX: http://localhost:8000/api/v1
        SERVER_BACKEND_PREFIX: http://backend:8000/api/v1
    container_name: frontend
    ports:
      - "80:3000"
    <<: *default-set

  grafana:
    image: grafana/grafana:8.1.3
    container_name: monitoring-grafana
    ports:
      - "3000:3000"
    <<: *default-set

  prometheus:
    image: prom/prometheus:v2.29.2
    container_name: monitoring-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml
    <<: *default-set

  loki:
    image: grafana/loki:2.3.0
    container_name: monitoring-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - grafana-data:/var/lib/grafana
    <<: *default-set

  promtail:
    image: grafana/promtail:2.3.0
    container_name: monitoring-promtail
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail.yml:/etc/promtail/promtail.yml:ro
      - promtail-data:/var/lib/promtail/positions
    command: -config.file=/etc/promtail/promtail.yml
    <<: *default-set

  # dd-agent:
  #   image: gcr.io/datadoghq/agent:latest
  #   container_name: datadog-agent
  #   ports:
  #     - "8126:8126"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - /proc/:/host/proc/:ro
  #     - /etc/passwd:/etc/passwd:ro
  #     - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
  #   environment:
  #     - "DD_API_KEY=<>"
  #     - "DD_SITE=<>"
  #     - "DD_APM_ENABLED=true"
  #     - "DD_PROCESS_AGENT_ENABLED=true"
  #     - "DD_APM_NON_LOCAL_TRAFFIC=true"
  #     - "DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL"
  #   <<: *default-set

volumes:
  grafana-data:
  postgres-data:
  prometheus-data:
  loki-data:
  promtail-data:

networks:
  parking:
